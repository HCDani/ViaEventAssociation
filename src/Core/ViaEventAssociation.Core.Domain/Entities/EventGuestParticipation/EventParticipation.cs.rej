--- src/Core/ViaEventAssociation.Core.Domain/Entities/EventGuestParticipation/EventParticipation.cs
+++ src/Core/ViaEventAssociation.Core.Domain/Entities/EventGuestParticipation/EventParticipation.cs
@@ -14,13 +14,10 @@ using ViaEventAssociation.Core.Domain.Entities.EventGuestParticipation.Contracts
 namespace ViaEventAssociation.Core.Domain.Entities.EventGuestParticipation {
     public class EventParticipation : Entity<Guid> {
         public ParticipationStatus ParticipationStatus { get; private set; }
-        public Guest Guest { get; }
-        public VEvent Event { get; }
+        public Guest Guest { get; private set; }
+        public VEvent Event { get; private set; }
 
-        private EventParticipation(Guid id, Guest guest, VEvent vEvent, ParticipationStatus status) : base(id) {
-            Guest = guest;
-            Event = vEvent;
-            ParticipationStatus = status;
+        private EventParticipation(Guid id) : base(id) {
         }
 
         public static Result<EventParticipation> Create(Guid id, Guest guest, VEvent vEvent, ParticipationStatus participationStatus, IGetEventParticipants eventParticipants) {
@@ -39,7 +36,7 @@ namespace ViaEventAssociation.Core.Domain.Entities.EventGuestParticipation {
             }
             if (vEvent.Status == EventStatus.Active && vEvent.Duration.From < DateTime.Now) return new Result<EventParticipation>(156, "Guest cannot participate in an already active event.");
             
-            return new Result<EventParticipation>(new EventParticipation(id, guest, vEvent, participationStatus));
+            return new Result<EventParticipation>(new EventParticipation(id) { ParticipationStatus = participationStatus, Guest = guest, Event = vEvent });
         }
         public Result<EventParticipation> UpdateStatus(ParticipationStatus status, IGetEventParticipants eventParticipants) {
             if (Event.Status == EventStatus.Cancelled) return new Result<EventParticipation>(157, "Guest cannot participate in a cancelled event.");
